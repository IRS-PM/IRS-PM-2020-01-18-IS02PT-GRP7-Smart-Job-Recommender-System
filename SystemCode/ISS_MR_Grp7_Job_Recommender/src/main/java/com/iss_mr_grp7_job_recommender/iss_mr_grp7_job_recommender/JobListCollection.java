package com.iss_mr_grp7_job_recommender.iss_mr_grp7_job_recommender;

import java.util.*;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path; 
import java.nio.file.Paths; 
import java.io.BufferedReader;
import java.io.IOException;
import java.net.URL;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class JobListCollection implements java.io.Serializable {

	static final long serialVersionUID = 1L;

	@org.kie.api.definition.type.Label("Job List")
	private java.util.List<com.iss_mr_grp7_job_recommender.iss_mr_grp7_job_recommender.JobPosting> jobList;

	public JobListCollection() {
	    jobList = new ArrayList<com.iss_mr_grp7_job_recommender.iss_mr_grp7_job_recommender.JobPosting>();
	}

	public java.util.List<com.iss_mr_grp7_job_recommender.iss_mr_grp7_job_recommender.JobPosting> getJobList() {
		return this.jobList;
	}

	public void setJobList(
			java.util.List<com.iss_mr_grp7_job_recommender.iss_mr_grp7_job_recommender.JobPosting> jobList) {
		this.jobList = jobList;
	}

	public JobListCollection(
			java.util.List<com.iss_mr_grp7_job_recommender.iss_mr_grp7_job_recommender.JobPosting> jobList) {
		this.jobList = jobList;
	}
	
	
	//Add created JobPosting object to list
	public void addJobPosting(JobPosting job){
	   
	    this.jobList.add(job);
	}
	
	//Populate the job list from csv
	public void populateJobPostings(){
        //Load Jobs from CSV
        //CSV file to be placed in /home/iss-user directory
        
      	    
		Path pathToFile = Paths.get("/home/iss-user/Desktop/JobDatas.csv");
	    try(BufferedReader br = Files.newBufferedReader(pathToFile, StandardCharsets.US_ASCII)) 
 
        { 
 	 		 System.out.println("Reading line from CSV file...");
     		 String line = br.readLine(); 
 	         line = br.readLine(); 
     		 int j=0;
     	 	 while (line != null) { 

		        System.out.println("In loop...");
     	 	    String[] attributes = line.split(",");
     	 	    j++;
     	 	
      		    JobPosting job= createJob(attributes); 
      			getJobList().add(job) ;
       	        line = br.readLine(); 
   		        System.out.println("End of loop...");
      	        }
        } 
  	   catch (IOException ioe) { 
  	   			ioe.printStackTrace(); 
  	   	} 
        
	}

    private static JobPosting createJob(String[] metadata) 	{
		//Make sure the variables correspond to the correct metadata columns!!
		
		System.out.println("Parsing attributes from metadata...");
		
		//Assigning info from csv to placeholder variables
		String employmentType = metadata[0];
		String jobTitle = metadata[1];
		String companyName = metadata[2];
		int workExperienceReq = Integer.parseInt(metadata[3]); 
		String seniorityLevel = metadata[4];
		String jobCategory = metadata[5]; 
		String jobRequirements = metadata[6];
		int minSalary = Integer.parseInt(metadata[7]); 
		int maxSalary = Integer.parseInt(metadata[8]); 
		 
 		System.out.println("Assigning attributes to job object...");
		//Build JobPosting object and assign variables to attributes
		JobPosting job = new JobPosting();
		job.setEmploymentType(employmentType);
		job.setJobTitle(jobTitle);
		job.setCompanyName(companyName);
		job.setWorkExperienceReq(workExperienceReq);
		job.setSeniorityLevel(seniorityLevel);
		job.setJobCategory(jobCategory);
		job.setJobRequirements(jobRequirements);
		job.setMinSalary(minSalary);
		job.setMaxSalary(maxSalary);
		
				
		return job;
			 
	}
	

}